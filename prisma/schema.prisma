// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  fullName    String
  userName    String?  @unique
  email       String   @unique
  image       String?
  password    String
  phoneNumber String?
  country     String?
  profile     Profile?
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  subscription Subscription[]
  promoCodes   PromoCode[]
}

model Profile {
  id      String  @id @default(uuid())
  name    String
  phone   String?
  company String?
  userId  String  @unique
  user    User    @relation(fields: [userId], references: [id])
}

model Subscription {
  id        String             @id @default(uuid())
  user      User               @relation(fields: [userId], references: [id])
  userId    String
  price     Float
  planType  PlanType
  status    SubscriptionStatus @default(ACTIVE)
  startDate DateTime           @default(now())
  endDate   DateTime
  isActive  Boolean            @default(true)
}

enum PlanType {
  MONTHLY
  YEARLY
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
  CANCELLED
  EXPIRED
}

model PromoCode {
  id        String   @id @default(uuid())
  code      String   @unique
  discount  Float
  expiresAt DateTime
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

enum Role {
  ADMIN
  USER
}
